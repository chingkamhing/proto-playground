syntax = "proto3";
package gateway;
option go_package = "github.com/TMGaminghk/tm2-proto-gateway-go;tm2_proto_gateway";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "gateway/gateway_rr.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "TM2 Game API Gateway";
		version: "0.1.0";
		contact: {
			name: "github.com/TMGaminghk/tm2-proto-gateway";
			url: "https://www.tmgaming.page/";
			email: "kam.dev@tmgaming.page";
        };
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "bearer"
            value: {
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
                name: "Authorization"
                type: TYPE_API_KEY
                in: IN_HEADER
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

// User
service User {
    // get user basic information
    rpc GetUserBasic(GetUserBasicRequest) returns (GetUserBasicReply) {
        option (google.api.http) = {
            get: "/api/v1/user/basic/{id}"
        };
    }
    // get user balance
    rpc GetUserBalance(GetUserBalanceRequest) returns (GetUserBalanceReply) {
        option (google.api.http) = {
            get: "/api/v1/user/balance/{id}"
        };
    }
}
